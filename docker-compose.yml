services:
  postgres:
    image: postgres:16-alpine
    container_name: mypage_postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: mypage_production
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  web:
    build: .
    container_name: mypage_web
    command: bash -c "sleep 10 && bin/rails db:prepare && bin/rails server -b 0.0.0.0"
    environment:
      RAILS_ENV: production
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/mypage_production
      RAILS_MASTER_KEY: ${RAILS_MASTER_KEY}
    volumes:
      - ./:/rails
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: mypage_nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./public:/rails/public
    depends_on:
      - web
    restart: unless-stopped

volumes:
  postgres_data:
